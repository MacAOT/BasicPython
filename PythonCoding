# Count len of Character in Word
def count(s):
    counts = {}
    for i in s:
        if i in counts:
            counts[i] += 1
            print(i,counts)
        else:
            counts[i] = 1
            print(i,counts)
    print(counts)
word = input("Enter your string: ")
print(word)
count(word)
# =====================================================
romtext = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}
def romtodec(romnum):
    sum = 0
    for i in range(len(romnum)-1):
        left = romnum[i]
        right = romnum[i+1]
        if romtext[left] < romtext[right]:
            sum -= romtext[left]
        else:    
            sum += romtext[left]
    sum += romtext[romnum[-1]]
    return sum
roman = input('Enter Roman Number: ')
print(f"Roman Number is {roman} = {romtodec(roman)}")
# =====================================================
# Prints today's date with help of datetime library
import datetime
today = datetime.datetime.today()
print(today)
print(f"'Today is {today: Day %d Month %B Year %Y H %H M %M S %S}'")
newline = ord('\n')
print(f"newline: {newline}")
name = 'Mac'
age = 53
print(f"Hello, My name is {name} and I'm {age} years old.")
# =====================================================
def least_common_multiple(a,b):
    if a > b:
        greater = a
    elif a < b:
        greater = b
    elif a == b:
        greater = 1
    while(True):
        if ((greater % a == 0) and (greater % b == 0)):
            lcm = greater
            break
        greater += 1
    return lcm
a =int(input("Enter 1st number: "))
print(f"1st number is {a}")
b =int(input("Enter 2nd number: "))
print(f"2nd number is {b}")
print(least_common_multiple(a,b))    
# =====================================================
def bmi_calculator(name, height_cm, weight_kg):
    bmi = weight_kg / ((height_cm/100) ** 2)
    print (f'height: {height_cm} cm weight: {weight_kg} kg')
    print (f'bmi: {bmi}')
    if bmi < 25.00:
        print(name + ' is underweight\n')
    else:
        print(name + ' is overweight\n')
x = input('print any button to start, Quit to finish ')
x = x.lower()   
while True:
    try:
        tries = int(input('How many tries; '))
        break
    except ValueError:
        print("Oops!  That was no valid number.  Try again...")
i = 1
while x != 'quit' and i <= tries :
    result1 = input(' name ')
    result2 = float(input('height(cm) '))
    result3 = int(input('weight(kg) '))
    i+=1
    bmi_calculator(result1, result2, result3)
    if i > tries:
        break
    x = input('print any button to start, Quit to finish ')
    x = x.lower()    
print(f'Finish {tries} result(s)')
# =====================================================
#Password Authentication using Python
import getpass
database = {"clcoding" : "976729" , "pythonclcoding" : "2502"}
username = input("Enter Your Username : ")
password = getpass.getpass("Enter Your Password : ")
for i in database.keys():
    if username == i:
        while password != database.get(i):
            password = getpass.getpass("Enter Your Password Again : ")
        break
print("Verified")
# =====================================================
while True:
diameter = float (input ("Please input float: "))
if diameter == 0:
break
if diameter <= 5:
print ('size2')
elif diameter <= 5.5:
print('size3')
elif diameter <= 6:
print ('size4')
elif diameter <= 6.5:
print('size5')
else:
print('size6')
# =====================================================
a = ["bana","app","oran"]
b = ["na","le","ge"]

print("Question about List")
print('a = ["bana","app","oran"]')
print('b = ["na","le","ge"]')
print()

print("Solution 1")
c = []
for x, y in zip(a, b):
    completed = x + y
    c.append(completed)
print(c)
print("Solution 2A")
c = []
for i in range(3):
    c.append(a[i]+b[i])
print(c)
print("Solution 2B Reverse")
d = []
for x in c:
    d.append(x[:-2])
print(d)
e = []
for x in c:
    e.append(x[-2:])
print(e)
f = []
for i in range(len(d)):
    f.append(d[i]+e[i])
print(f)
print("Solution 3")
print([a[i]+b[i] for i in range(len(a))])

print("Solution 4")
print(list(map(lambda x: "".join(x), zip(a,b))))

print("Solution 5")
ab = list((a[0] + b[0], a[1] + b[1], a[2] + b[2]))
print(ab)
print("Solution 6")
output = [str(a[0]) + str(b[0]), str(a[1]) + str(b[1]), str(a[2]) + str(b[2])]
print(output)

b = []
for i in range(10): 
    b.append(i)
print(b)
print(list(range(10)))
print([i for i in range(10)])
# =====================================================
# Star Patterns #
i=1
while(i<=6):
    print(i*"*")
    i += 1
i=6
while(i>=1):
    print(i*"*")
    i -= 1
print()
#### Mac Coding ####
[print("*"*(i+1)) for i in range(6)]
[print("*"*(i-1)) for i in range(7,1,-1)]
#### Mac Coding ####

# Program to print full pyramid 
num_rows = int(input("Enter the number of rows"));
for i in range(0, num_rows):
    for j in range(0, num_rows-i-1):
        print(end=" ")
    for j in  range(0, i+1):
        print("*", end=" ")
    print()
#### Mac Coding ####
[print(" "*(num_rows-i-1)+"* "*(i+1)) for i in range(0, num_rows)]
#### Mac Coding ####

#Program to print Left Half Pyramid
num_rows = int(input("Enter the number of rows"));
for i in range(0, num_rows):
    for j in range(0, i+1):
        print("* ", end="")
    print()
#### Mac Coding ####
[print("* "*(i+1)) for i in range(0, num_rows)]
#### Mac Coding ####

#Program to print Right Half Pyramid
num_rows = int(input("Enter the number of rows"));
for i in range(0, num_rows):
    for j in range(0, num_rows*2-2):
        print(end=" ")
    num_rows -= 1
    for j in range(0, i+1):
        print("* ", end="")
    print()   
#### Mac Coding ####
num_rows = int(input("Enter the number of rows"));
[print(" "*(num_rows*2)+"* "*(i)) for i in range(1, num_rows + 1)]
[print("* "*(i)) for i in range(num_rows, 0, -1)]
#### Mac Coding ####

# Program to print One More Star Pattern Pyramid
print("Program to print star pattern: \n");
num_rows = int(input("Enter maximum stars you want display on a single line"))
for i in range (0, num_rows):
    for j in range(0, i + 1):
        print("* ", end='')
    print("\r")
for i in range (num_rows, 0, -1):
    for j in range(0, i -1):
        print("* ", end='')
    print("\r")
#### Mac Coding ####
num_rows = int(input("Enter the number of rows"));
[print("* "*(i)) for i in range(1, num_rows + 1)]
[print("* "*(i)) for i in range(num_rows - 1, 0, -1)]
#### Mac Coding ####
    
print("Program to print star pattern in different style: \n");
num_rows = int(input('Please enter the number of rows'));
for i in range (0,num_rows):  
    for j in range (num_rows,i,-1):  
        print("* ", end="")
    print()
num_rows = int(input("Please enter the number of rows"));
for i in range(num_rows,0,-1):
    for j in range(0, num_rows-i):
        print(end=" ")
    for j in range(0,i):
        print("* ", end=" ")
    print()
  
# Program to print full diamond star pattern 
print("Program to print full diamond star pattern")
num_rows = int(input("Enter the number of rows"))
k = 0
for i in range(1, num_rows + 1): 
    for j in range (1, (num_rows - i) + 1): 
        print(end = " ")          
    while k != (2 * i - 1):
        print("*", end = "")
        k = k + 1
    k = 0   
    print()  
k = 2
m = 1
for i in range(1, num_rows): 
    for j in range (1, k):
        print(end = " ") 
    k = k + 1	  
    while m <= (2 * (num_rows - i) - 1): 
        print("*", end = "") 
        m = m + 1
    m = 1	
    print()
#### Mac Coding ####
num_rows = int(input("Enter the number of rows"))
for i in range(1, num_rows + 1):
    for j in range (1, (num_rows - i) + 1): 
        print(end = " ")
    k = 0 
    while k < (2 * i - 1):
        print("*", end = "")
        k += 1
    print()  
for i in range(1, num_rows): 
    for j in range (1, i + 1):
        print(end = " ")   
    k = 0	
    while k < (2 * (num_rows - i) - 1): 
        print("*", end = "") 
        k += 1
    print()
#### Mac Coding ####

# Program to print full pyramid and the star is odd every row
n = 5
for i in range(n):
    print(' ' * (n-i-1), end='')
    print('*' * (2*i+1), end='')
    print()
#### Mac Coding ####   
row = 5
for i in range(row):
    for j in range(row-i-1):
        print(end=" ")
    for j in range(2*i+1):
        print("*", end="")      
    print()
# Shorter version #
[print(" "*(row-i-1)+"*"*(i+(i+1))) for i in range(0, row)]
#### Mac Coding ####

""" Generates a Pattern depending on the user Input """
# user can input the Width of the Square
width = int(input("Width: "))
# user can input the Height of the Square
height = int(input("Height: "))
# this generates the first row of Stars
output = ("x " * width) + "\n"
# here we add each row with the ! Signs
for i in range(height-2):
    output += "x " + ("  " * (width - 2)) + "x\n"
# we end the Output with another line of Stars
output += "x " * width
# print the Output to the Console
print(output)

n = int(input("Number of Square: "))
for row in range(n):
    for column in range(n):
        if row == n-1 or column == n-1 or row == 0 or column == 0 or row == n/2-.5 or column == n/2-.5:
            print("x", end=" ")
        else:
            print(" ", end=" ")
    print(" ")

# =====================================================    
